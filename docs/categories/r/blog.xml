<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>mlr-org</title>
    <link>https://mlr-org.com/</link>
    <atom:link href="https://mlr-org.com/blog.xml" rel="self" type="application/rss+xml"/>
    <description>Website of mlr3 - Machine Learning in R.
</description>
    <image>
      <title>mlr-org</title>
      <url>https://mlr-org.com/images/favicon.ico</url>
      <link>https://mlr-org.com/</link>
    </image>
    <generator>Distill</generator>
    <lastBuildDate>Thu, 03 Feb 2022 00:00:00 +0000</lastBuildDate>
    <item>
      <title>Google Summer of Code and mlr3</title>
      <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Florian Pfisterer</dc:creator>
      <link>https://mlr-org.com/posts/2022-02-03-google-summer-of-code-and-mlr3</link>
      <description>Our Org is currently thinking about participating in GSOC 2022 again.</description>
      <category>R</category>
      <guid>https://mlr-org.com/posts/2022-02-03-google-summer-of-code-and-mlr3</guid>
      <pubDate>Thu, 03 Feb 2022 00:00:00 +0000</pubDate>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://mlr-org.com/posts/2022-02-03-google-summer-of-code-and-mlr3/GSoC-Vertical.png" medium="image" type="image/png" width="1000" height="1000"/>
    </item>
    <item>
      <title>mlr3 Package Updates - Q4/2021</title>
      <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Schratz</dc:creator>
      <link>https://mlr-org.com/posts/2022-01-03-mlr3-package-updates-q42021</link>
      <description>This posts gives an overview by listing the recent release notes of mlr3 packages from the last quarter.</description>
      <category>R</category>
      <category>News</category>
      <guid>https://mlr-org.com/posts/2022-01-03-mlr3-package-updates-q42021</guid>
      <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://mlr-org.com/posts/2022-01-03-mlr3-package-updates-q42021/logo.png" medium="image" type="image/png" width="581" height="296"/>
    </item>
    <item>
      <title>Announcing mlr3spatial</title>
      <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Becker</dc:creator>
      <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Schratz</dc:creator>
      <link>https://mlr-org.com/posts/2021-12-01-announcing-mlr3spatial</link>
      <description>We are happy to announce that mlr3spatial has been released on CRAN in November 2021.</description>
      <category>R</category>
      <category>CRAN</category>
      <guid>https://mlr-org.com/posts/2021-12-01-announcing-mlr3spatial</guid>
      <pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://mlr-org.com/posts/2021-12-01-announcing-mlr3spatial/announcing-mlr3spatial_files/figure-html5/mlr3spatial-006-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>mlr Workshop 2021 Recap</title>
      <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Schratz</dc:creator>
      <link>https://mlr-org.com/posts/2021-10-07-mlr-workshop-2021-recap</link>
      <description>This blog post is a recap of the mlr-org workshop 2021 which took place from the 28th of September until the 10th of October.</description>
      <category>R</category>
      <category>Workshop</category>
      <guid>https://mlr-org.com/posts/2021-10-07-mlr-workshop-2021-recap</guid>
      <pubDate>Thu, 07 Oct 2021 00:00:00 +0000</pubDate>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://mlr-org.com/posts/2021-10-07-mlr-workshop-2021-recap/mlr3fairness-example.png" medium="image" type="image/png" width="883" height="483"/>
    </item>
    <item>
      <title>mlr3 Package Updates - Q3/2021</title>
      <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Schratz</dc:creator>
      <link>https://mlr-org.com/posts/2021-09-29-mlr3-package-updates-q32021</link>
      <description>This posts gives an overview by listing the recent release notes of mlr3 packages from the last quarter.</description>
      <category>R</category>
      <category>News</category>
      <guid>https://mlr-org.com/posts/2021-09-29-mlr3-package-updates-q32021</guid>
      <pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://mlr-org.com/posts/2021-09-29-mlr3-package-updates-q32021/logo.png" medium="image" type="image/png" width="581" height="296"/>
    </item>
    <item>
      <title>The Cross-Validation - Train/Predict Misunderstanding</title>
      <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Schratz</dc:creator>
      <link>https://mlr-org.com/posts/2020-12-20-the-cross-validation-trainpredict-misunderstanding</link>
      <description>ver the past years I've seen multiple posts on Stackoverflow and our GitHub issues which suffer from a conceptual misunderstanding: cross-validation (CV) vs. train/predict.</description>
      <category>R</category>
      <guid>https://mlr-org.com/posts/2020-12-20-the-cross-validation-trainpredict-misunderstanding</guid>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://mlr-org.com/posts/2020-12-20-the-cross-validation-trainpredict-misunderstanding/theme-mlr3-example.png" medium="image" type="image/png" width="748" height="482"/>
    </item>
    <item>
      <title>Announcing mlr3spatiotempcv</title>
      <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Schratz</dc:creator>
      <link>https://mlr-org.com/posts/2020-11-12-announcing-mlr3spatiotempcv</link>
      <description>We are happy to announce that mlr3spatial has been released on CRAN in November 2020.</description>
      <category>R</category>
      <category>CRAN</category>
      <guid>https://mlr-org.com/posts/2020-11-12-announcing-mlr3spatiotempcv</guid>
      <pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://mlr-org.com/posts/2020-11-12-announcing-mlr3spatiotempcv/announcing-mlr3spatiotempcv_files/figure-html5/mlr3spatiotempcv-vis-example-1.png" medium="image" type="image/png" width="1920" height="1920"/>
    </item>
    <item>
      <title>Introducing mlr3cluster: Cluster Analysis Package</title>
      <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Damir Pulatov</dc:creator>
      <link>https://mlr-org.com/posts/2020-08-26-introducing-mlr3cluster-cluster-analysis-package</link>
      <description>


&lt;p&gt;Tired of learning to use multiple packages to access clustering algorithms?&lt;/p&gt;
&lt;p&gt;Using different packages makes it difficult to compare the performance of clusterers?&lt;/p&gt;
&lt;p&gt;It would be great to have just one package that makes interfacing all things clustering easy?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mlr-org/mlr3cluster"&gt;mlr3cluster&lt;/a&gt; to the rescue!&lt;/p&gt;
&lt;p&gt;mlr3cluster is a cluster analysis extention package within the mlr3 ecosystem. It is a successsor of mlr’s cluster capabilities in spirit and functionality.&lt;/p&gt;
&lt;p&gt;In order to understand the following introduction and tutorial you need to be familiar with R6 and mlr3 basics. See chapters 1-2 of the &lt;a href="https://mlr3book.mlr-org.com/"&gt;mlr3book&lt;/a&gt; if you need a refresher.&lt;/p&gt;
&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;
&lt;p&gt;To install the package, run the following code chunk:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;install.packages(&amp;quot;mlr3cluster&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="getting-started"&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Assuming you know all the basics and you’ve installed the package, here’s an example on how to perform k-means clustering on a classic &lt;a href="https://stat.ethz.ch/R-manual/R-patched/library/datasets/html/USArrests.html"&gt;usarrests&lt;/a&gt; data set:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(mlr3)
library(mlr3cluster)

task = mlr_tasks$get(&amp;quot;usarrests&amp;quot;)
learner = mlr_learners$get(&amp;quot;clust.kmeans&amp;quot;)
learner$train(task)
preds = learner$predict(task = task)

preds&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;PredictionClust&amp;gt; for 50 observations:
    row_ids partition
          1         2
          2         2
          3         2
---                  
         48         1
         49         1
         50         1&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="integrated-learners"&gt;Integrated Learners&lt;/h2&gt;
&lt;p&gt;What built-in clusterers does the package come with? Here is a list of integrated learners:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;mlr_learners$keys(&amp;quot;clust&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt; [1] &amp;quot;clust.agnes&amp;quot;        &amp;quot;clust.ap&amp;quot;           &amp;quot;clust.cmeans&amp;quot;      
 [4] &amp;quot;clust.cobweb&amp;quot;       &amp;quot;clust.dbscan&amp;quot;       &amp;quot;clust.diana&amp;quot;       
 [7] &amp;quot;clust.em&amp;quot;           &amp;quot;clust.fanny&amp;quot;        &amp;quot;clust.featureless&amp;quot; 
[10] &amp;quot;clust.ff&amp;quot;           &amp;quot;clust.hclust&amp;quot;       &amp;quot;clust.kkmeans&amp;quot;     
[13] &amp;quot;clust.kmeans&amp;quot;       &amp;quot;clust.MBatchKMeans&amp;quot; &amp;quot;clust.meanshift&amp;quot;   
[16] &amp;quot;clust.pam&amp;quot;          &amp;quot;clust.SimpleKMeans&amp;quot; &amp;quot;clust.xmeans&amp;quot;      &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The library contains all the basic types of clusterers: partitional, hierarchial, density-based and fuzzy. Below is a detailed list of all the learners.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class="header"&gt;
&lt;th align="left"&gt;ID&lt;/th&gt;
&lt;th align="left"&gt;Learner&lt;/th&gt;
&lt;th align="left"&gt;Package&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="odd"&gt;
&lt;td align="left"&gt;&lt;a href="https://mlr3cluster.mlr-org.com/reference/mlr_learners_clust.agnes.html"&gt;clust.agnes&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Agglomerative Hierarchical Clustering&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://CRAN.R-project.org/package=cluster"&gt;cluster&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td align="left"&gt;&lt;a href="https://mlr3cluster.mlr-org.com/reference/mlr_learners_clust.cmeans.html"&gt;clust.cmeans&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Fuzzy C-Means Clustering&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://CRAN.R-project.org/package=e1071"&gt;e1071&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td align="left"&gt;&lt;a href="https://mlr3cluster.mlr-org.com/reference/mlr_learners_clust.dbscan.html"&gt;clust.dbscan&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Density-based Clustering&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://CRAN.R-project.org/package=dbscan"&gt;dbscan&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td align="left"&gt;&lt;a href="https://mlr3cluster.mlr-org.com/reference/mlr_learners_clust.diana.html"&gt;clust.diana&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Divisive Hierarchical Clustering&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://CRAN.R-project.org/package=cluster"&gt;cluster&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td align="left"&gt;&lt;a href="https://mlr3cluster.mlr-org.com/reference/mlr_learners_clust.fanny.html"&gt;clust.fanny&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Fuzzy Clustering&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://CRAN.R-project.org/package=cluster"&gt;cluster&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td align="left"&gt;&lt;a href="https://mlr3cluster.mlr-org.com/reference/mlr_learners_clust.featureless.html"&gt;clust.featureless&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simple Featureless Clustering&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://github.com/mlr-org/mlr3cluster"&gt;mlr3cluster&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td align="left"&gt;&lt;a href="https://mlr3cluster.mlr-org.com/reference/mlr_learners_clust.kmeans.html"&gt;clust.kmeans&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;K-Means Clustering&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://stat.ethz.ch/R-manual/R-devel/library/stats/html/stats-package.html"&gt;stats&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td align="left"&gt;&lt;a href="https://mlr3cluster.mlr-org.com/reference/mlr_learners_clust.pam.html"&gt;clust.pam&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Clustering Around Medoids&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://CRAN.R-project.org/package=cluster"&gt;cluster&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td align="left"&gt;&lt;a href="https://mlr3cluster.mlr-org.com/reference/mlr_learners_clust.xmeans.html"&gt;clust.xmeans&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;K-Means with Automatic Determination of k&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://CRAN.R-project.org/package=RWeka"&gt;RWeka&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="integrated-measures"&gt;Integrated Measures&lt;/h2&gt;
&lt;p&gt;List of integrated cluster measures:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;mlr_measures$keys(&amp;quot;clust&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;clust.ch&amp;quot;         &amp;quot;clust.db&amp;quot;         &amp;quot;clust.dunn&amp;quot;      
[4] &amp;quot;clust.silhouette&amp;quot; &amp;quot;clust.wss&amp;quot;       &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Below is a detailed list of all the integrated learners.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class="header"&gt;
&lt;th align="left"&gt;ID&lt;/th&gt;
&lt;th align="left"&gt;Measure&lt;/th&gt;
&lt;th align="left"&gt;Package&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="odd"&gt;
&lt;td align="left"&gt;&lt;a href="https://mlr3cluster.mlr-org.com/reference/mlr_measures_clust.db.html"&gt;clust.db&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Davies-Bouldin Cluster Separation&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://CRAN.R-project.org/package=clusterCrit"&gt;clusterCrit&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td align="left"&gt;&lt;a href="https://mlr3cluster.mlr-org.com/reference/mlr_measures_clust.dunn.html"&gt;clust.dunn&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Dunn index&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://CRAN.R-project.org/package=clusterCrit"&gt;clusterCrit&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td align="left"&gt;&lt;a href="https://mlr3cluster.mlr-org.com/reference/mlr_measures_clust.ch.html"&gt;clust.ch&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Calinski Harabasz Pseudo F-Statistic&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://CRAN.R-project.org/package=clusterCrit"&gt;clusterCrit&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td align="left"&gt;&lt;a href="https://mlr3cluster.mlr-org.com/reference/mlr_measures_clust.silhouette.html"&gt;clust.silhouette&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Rousseeuw’s Silhouette Quality Index&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://CRAN.R-project.org/package=clusterCrit"&gt;clusterCrit&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="integrated-tasks"&gt;Integrated Tasks&lt;/h2&gt;
&lt;p&gt;There is only one built-in Task in the package:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;mlr_tasks$get(&amp;quot;usarrests&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;TaskClust:usarrests&amp;gt; (50 x 4)
* Target: -
* Properties: -
* Features (4):
  - int (2): Assault, UrbanPop
  - dbl (2): Murder, Rape&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see, the biggest difference in clustering tasks as compared to the rest of the tasks in mlr3 is the absense of the Target column.&lt;/p&gt;
&lt;h2 id="hyperparameters"&gt;Hyperparameters&lt;/h2&gt;
&lt;p&gt;Setting hyperparameters for clusterers is as easy as setting parameters for any other mlr3 learner:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;task = mlr_tasks$get(&amp;quot;usarrests&amp;quot;)
learner = mlr_learners$get(&amp;quot;clust.kmeans&amp;quot;)
learner$param_set&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;ParamSet&amp;gt;
          id    class lower upper nlevels       default value
1:   centers ParamUty    NA    NA     Inf             2     2
2:  iter.max ParamInt     1   Inf     Inf            10      
3: algorithm ParamFct    NA    NA       4 Hartigan-Wong      
4:    nstart ParamInt     1   Inf     Inf             1      
5:     trace ParamInt     0   Inf     Inf             0      &lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;learner$param_set$values = list(centers = 3L, algorithm = &amp;quot;Lloyd&amp;quot;, iter.max = 100L)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="train-and-predict"&gt;Train and Predict&lt;/h2&gt;
&lt;p&gt;The “train” method is simply creating a model with cluster assignments for data, while the “predict” method’s functionality varies depending on the clusterer in question. Read the each learner’s documentation for details.&lt;/p&gt;
&lt;p&gt;For example, the &lt;code&gt;kmeans&lt;/code&gt; learner’s predict method uses &lt;code&gt;clue::cl_predict&lt;/code&gt; which performs cluster assignments for new data by looking at the “closest” neighbors of the new observations.&lt;/p&gt;
&lt;p&gt;Following the example from the previous section:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;task = mlr_tasks$get(&amp;quot;usarrests&amp;quot;)
train_set = sample(task$nrow, 0.8 * task$nrow)
test_set = setdiff(seq_len(task$nrow), train_set)

learner = mlr_learners$get(&amp;quot;clust.kmeans&amp;quot;)
learner$train(task, row_ids = train_set)

preds = learner$predict(task, row_ids = test_set)
preds&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;PredictionClust&amp;gt; for 10 observations:
    row_ids partition
          9         1
         15         2
         20         1
---                  
         34         2
         36         2
         39         2&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="benchmarking-and-evaluation"&gt;Benchmarking and Evaluation&lt;/h2&gt;
&lt;p&gt;To assess the quality of any machine learning experiment, you need to choose an evaluation metric that makes the most sense. Let’s design an experiment that will allow you to compare the performance of three different clusteres on the same task. The mlr3 library provides benchmarking functionality that lets you create such experiments.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# design an experiment by specifying task(s), learner(s), resampling method(s)
design = benchmark_grid(
  tasks = tsk(&amp;quot;usarrests&amp;quot;),
  learners = list(
    lrn(&amp;quot;clust.kmeans&amp;quot;, centers = 3L),
    lrn(&amp;quot;clust.pam&amp;quot;, k = 3L),
    lrn(&amp;quot;clust.cmeans&amp;quot;, centers = 3L)),
  resamplings = rsmp(&amp;quot;holdout&amp;quot;))
print(design)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;              task                  learner              resampling
1: &amp;lt;TaskClust[45]&amp;gt; &amp;lt;LearnerClustKMeans[37]&amp;gt; &amp;lt;ResamplingHoldout[19]&amp;gt;
2: &amp;lt;TaskClust[45]&amp;gt;    &amp;lt;LearnerClustPAM[37]&amp;gt; &amp;lt;ResamplingHoldout[19]&amp;gt;
3: &amp;lt;TaskClust[45]&amp;gt; &amp;lt;LearnerClustCMeans[37]&amp;gt; &amp;lt;ResamplingHoldout[19]&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;# execute benchmark
bmr = benchmark(design)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;INFO  [21:04:15.111] [mlr3] Running benchmark with 3 resampling iterations 
INFO  [21:04:15.190] [mlr3] Applying learner &amp;#39;clust.kmeans&amp;#39; on task &amp;#39;usarrests&amp;#39; (iter 1/1) 
INFO  [21:04:15.312] [mlr3] Applying learner &amp;#39;clust.pam&amp;#39; on task &amp;#39;usarrests&amp;#39; (iter 1/1) 
INFO  [21:04:15.322] [mlr3] Applying learner &amp;#39;clust.cmeans&amp;#39; on task &amp;#39;usarrests&amp;#39; (iter 1/1) 
INFO  [21:04:15.351] [mlr3] Finished benchmark &lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;# define measure
measures = list(msr(&amp;quot;clust.silhouette&amp;quot;))

bmr$aggregate(measures)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   nr      resample_result   task_id   learner_id resampling_id iters
1:  1 &amp;lt;ResampleResult[22]&amp;gt; usarrests clust.kmeans       holdout     1
2:  2 &amp;lt;ResampleResult[22]&amp;gt; usarrests    clust.pam       holdout     1
3:  3 &amp;lt;ResampleResult[22]&amp;gt; usarrests clust.cmeans       holdout     1
   clust.silhouette
1:        0.5398911
2:        0.5324310
3:        0.5324310&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="visualization"&gt;Visualization&lt;/h2&gt;
&lt;p&gt;How do you visualize clustering tasks and results? The &lt;code&gt;mlr3viz&lt;/code&gt; package (version &amp;gt;= 0.40) now provides that functionality.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;install.packages(&amp;quot;mlr3viz&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(mlr3viz)

task = mlr_tasks$get(&amp;quot;usarrests&amp;quot;)
learner = mlr_learners$get(&amp;quot;clust.kmeans&amp;quot;)
learner$param_set$values = list(centers = 3L)
learner$train(task)
preds = learner$predict(task)

# Task visualization
autoplot(task)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="filee739c1d92b07d_files/figure-html/unnamed-chunk-7-1.png" width="672" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# Pairs plot with cluster assignments
autoplot(preds, task)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="filee739c1d92b07d_files/figure-html/unnamed-chunk-7-2.png" width="672" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# Silhouette plot with mean silhouette value as reference line
autoplot(preds, task, type = &amp;quot;sil&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="filee739c1d92b07d_files/figure-html/unnamed-chunk-7-3.png" width="672" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# Performing PCA on task data and showing cluster assignments
autoplot(preds, task, type = &amp;quot;pca&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="filee739c1d92b07d_files/figure-html/unnamed-chunk-7-4.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;Keep in mind that &lt;code&gt;mlr3viz::autoplot&lt;/code&gt; also provides more options depending on the kind of plots you’re interested in. For example, to draw borders around clusters, provide appropriate parameters from &lt;code&gt;ggfortify::autoplot.kmeans&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;autoplot(preds, task, type = &amp;quot;pca&amp;quot;, frame = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="filee739c1d92b07d_files/figure-html/unnamed-chunk-8-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;You can also easily visualize dendrograms:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;task = mlr_tasks$get(&amp;quot;usarrests&amp;quot;)
learner = mlr_learners$get(&amp;quot;clust.agnes&amp;quot;)
learner$train(task)

# Simple dendrogram
autoplot(learner)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="filee739c1d92b07d_files/figure-html/unnamed-chunk-9-1.png" width="672" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# More advanced options from `factoextra::fviz_dend`
autoplot(learner,
  k = learner$param_set$values$k, rect_fill = TRUE,
  rect = TRUE, rect_border = c(&amp;quot;red&amp;quot;, &amp;quot;cyan&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="filee739c1d92b07d_files/figure-html/unnamed-chunk-9-2.png" width="672" /&gt;&lt;/p&gt;
&lt;h2 id="further-development"&gt;Further Development&lt;/h2&gt;
&lt;p&gt;If you have any issues with the package or would like to request a new feature, feel free to open an issue &lt;a href="https://github.com/mlr-org/mlr3cluster/issues"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="acknowledgements"&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;I would like to thank the following people for their help and guidance: Michel Lang, Lars Kotthoff, Martin Binder, Patrick Schratz, Bernd Bischl.&lt;/p&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5 xmlns:distill="https://distill.pub/journal/">11fdc2cbb50766386ecba54eceb4b3ab</distill:md5>
      <category>R</category>
      <category>CRAN</category>
      <guid>https://mlr-org.com/posts/2020-08-26-introducing-mlr3cluster-cluster-analysis-package</guid>
      <pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://mlr-org.com/posts/2020-08-26-introducing-mlr3cluster-cluster-analysis-package/introducing-mlr3cluster-cluster-analysis-package_files/figure-html5/unnamed-chunk-7-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
    <item>
      <title>useR 2020 Tutorial on mlr3, mlr3tuning and mlr3pipelines</title>
      <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc Becker</dc:creator>
      <link>https://mlr-org.com/posts/2020-08-04-user-2020-tutorial-on-mlr3-mlr3tuning-and-pipelines</link>
      <description>


&lt;p&gt;&lt;img src="https://mlr-org.com//posts/2020-08-04-user-2020-tutorial-on-mlr3-mlr3tuning-and-pipelines/head.jpeg" /&gt;&lt;/p&gt;
&lt;p&gt;We would like to invite you to our useR 2020 tutorial on &lt;code&gt;mlr3&lt;/code&gt;, &lt;code&gt;mlr3tuning&lt;/code&gt; and &lt;code&gt;mlr3pipelines&lt;/code&gt; taught by Bernd Bischl and Michel Lang. The tutorial will take place on 7th August at 10:00 (UTC-5). You can find more information and the registration link on &lt;a href="https://www.meetup.com/rladies-galapagos-islands/events/272240650/?isFirstPublish=true"&gt;meetup.com&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5 xmlns:distill="https://distill.pub/journal/">02b553915f081ef25b0abbf2c0e07254</distill:md5>
      <category>R</category>
      <guid>https://mlr-org.com/posts/2020-08-04-user-2020-tutorial-on-mlr3-mlr3tuning-and-pipelines</guid>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://mlr-org.com/posts/2020-08-04-user-2020-tutorial-on-mlr3-mlr3tuning-and-pipelines/head.jpeg" medium="image" type="image/jpeg"/>
    </item>
  </channel>
</rss>
